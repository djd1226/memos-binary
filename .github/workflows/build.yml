name: Build

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 'stable'
        check-latest: true

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Clone Repo
      run: |
        VERSION_TAG="v0.20.0"
        echo "Cloning the repository with the specified tag: $VERSION_TAG"
        git clone -b $VERSION_TAG https://github.com/usememos/memos
        npm install -g pnpm

    - name: Build Frontend
      run: |
        cd memos/web
        corepack enable && pnpm i --frozen-lockfile
        pnpm build
        mkdir -p ../artifact
        cp -R dist ../artifact/dist
        rm -rf ../server/router/frontend/dist
        mkdir -p ../server/router/frontend/dist
        mv -f dist ../server/router/frontend/dist
        cd ../..

    - name: Build binary
      run: |
        cd memos
        # Build for Linux AMD64
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o memos ./bin/memos/main.go
        rm -f artifact/memos
        cp memos artifact/memos
        cd artifact
        tar -czvf ../memos-linux-amd64.tar.gz *
        cd ..
        
        # Build for Windows AMD64
        GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o memos ./bin/memos/main.go
        rm -f artifact/memos
        cp memos artifact/memos
        cd artifact
        tar -czvf ../memos-windows-amd64.tar.gz *
        cd ..
        
        # Build for Darwin AMD64
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -o memos ./bin/memos/main.go
        rm -f artifact/memos
        cp memos artifact/memos
        cd artifact
        tar -czvf ../memos-darwin-amd64.tar.gz *
        cd ..
        
        # Build for FreeBSD AMD64
        GOOS=freebsd GOARCH=amd64 CGO_ENABLED=0 go build -o memos ./bin/memos/main.go
        rm -f artifact/memos
        cp memos artifact/memos
        cd artifact
        tar -czvf ../memos-freebsd-amd64.tar.gz *
        cd ..
        
        # Build for Linux ARM v7
        GOOS=linux GOARCH=arm CGO_ENABLED=0 GOARM=7 go build -o memos-armv7 ./bin/memos/main.go
        rm -f artifact/memos-armv7
        cp memos-armv7 artifact/memos-armv7
        cd artifact
        tar -czvf ../memos-linux-armv7.tar.gz *
        cd ..
        
        cd ..
        
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: memos-pre-built
        path: |
            memos/memos-linux-amd64.tar.gz
            memos/memos-windows-amd64.tar.gz
            memos/memos-darwin-amd64.tar.gz
            memos/memos-freebsd-amd64.tar.gz
            memos/memos-linux-armv7.tar.gz
            
    - name: Generate release tag
      id: tag
      run: |
        release_tag="v0.20.0"
        echo "release_tag=${release_tag}" >> $GITHUB_OUTPUT

    - name: Create release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: |
            memos/memos-linux-amd64.tar.gz
            memos/memos-windows-amd64.tar.gz
            memos/memos-darwin-amd64.tar.gz
            memos/memos-freebsd-amd64.tar.gz
            memos/memos-linux-armv7.tar.gz
              
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 8
